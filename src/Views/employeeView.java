package Views;


import Controllers.EmployeeController;
import Models.Employee;
import static Views.loginForm.uname;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.time.LocalTime;
import java.time.Year;
import java.util.Calendar;
import java.util.Date;
import java.util.Timer;
import java.util.TimerTask;
import java.util.concurrent.locks.Lock;
import java.util.concurrent.locks.ReentrantLock;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFrame;
import javax.swing.JOptionPane;


/**
 *
 * @author khopi
 */
public class employeeView extends javax.swing.JFrame {
    
    
    
    String loginTime;
    String logoutTime;
    static long t1;
    static long t2;
    static int milliseconds = 0;
    static int seconds = 0;
    static int minutes = 0;
    static int hours = 0;
    static int breakTime;
    
    static boolean state;
    static boolean flag;
    
    private Lock lock = new ReentrantLock();
    


    public employeeView() {
        initComponents();
        this.setLocationRelativeTo(null); // to center the lgin form
        jLabel2.setText( "Welcome " + uname);
        
        lock.lock();
                    //state = true;
        
                    try{

                        flag = true;
                        try {
                            LocalTime time1 = LocalTime.now();
                            loginTime = time1.toString();

                            SimpleDateFormat format = new SimpleDateFormat("HH:mm:ss");

                            Date date1 = format.parse(loginTime);

                            t1 = date1.getTime();





                            Thread printerThread = new Thread(){

                                public void run(){

                                    TimerTask tt = new TimerTask(){

                                        public void run(){
        //                                    if (state) {
        //                                        return;
        //                                    }
        //                                    type();

                                            if(flag == true){
                                                //type();
                                                MainClass.main1();
        //                                        MainClass m = new MainClass();
        //                                        m.mClose();
                                            }

                                        }

                                    };
                                    Timer t1 = new Timer();
                                    t1.schedule(tt, 5000, 5000);

                                }

                            };

                            printerThread.start();
                        } catch (ParseException ex) {
                            Logger.getLogger(employeeView.class.getName()).log(Level.SEVERE, null, ex);
                        }
                    }finally{
                        lock.unlock();
                    }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1registerminimize = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3registerclose = new javax.swing.JLabel();
        logOutLbl = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        hour = new javax.swing.JLabel();
        minute = new javax.swing.JLabel();
        second = new javax.swing.JLabel();
        millisecond = new javax.swing.JLabel();
        breakBtn = new javax.swing.JButton();
        breakOffBtn = new javax.swing.JButton();
        totalTime = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);

        jPanel1.setBackground(new java.awt.Color(206, 104, 8));
        jPanel1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jLabel1registerminimize.setFont(new java.awt.Font("Dialog", 1, 36)); // NOI18N
        jLabel1registerminimize.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1registerminimize.setText("-");
        jLabel1registerminimize.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabel1registerminimize.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel1registerminimizeMouseClicked(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Dialog", 1, 36)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("hello khopi");

        jLabel3registerclose.setFont(new java.awt.Font("Dialog", 1, 36)); // NOI18N
        jLabel3registerclose.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3registerclose.setText("x");
        jLabel3registerclose.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabel3registerclose.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel3registercloseMouseClicked(evt);
            }
        });

        logOutLbl.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        logOutLbl.setForeground(new java.awt.Color(255, 255, 255));
        logOutLbl.setText("log out");
        logOutLbl.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                logOutLblMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel1registerminimize)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel3registerclose))
                    .addComponent(logOutLbl, javax.swing.GroupLayout.Alignment.TRAILING))
                .addContainerGap())
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel1Layout.createSequentialGroup()
                    .addGap(29, 29, 29)
                    .addComponent(jLabel2)
                    .addContainerGap(471, Short.MAX_VALUE)))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3registerclose)
                    .addComponent(jLabel1registerminimize))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 34, Short.MAX_VALUE)
                .addComponent(logOutLbl)
                .addContainerGap())
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                    .addContainerGap(26, Short.MAX_VALUE)
                    .addComponent(jLabel2)
                    .addGap(33, 33, 33)))
        );

        jPanel2.setBackground(new java.awt.Color(42, 49, 66));
        jPanel2.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jPanel2.setPreferredSize(new java.awt.Dimension(670, 344));

        hour.setFont(new java.awt.Font("Dialog", 1, 36)); // NOI18N
        hour.setForeground(new java.awt.Color(204, 204, 255));
        hour.setText("00 :");

        minute.setFont(new java.awt.Font("Dialog", 1, 36)); // NOI18N
        minute.setForeground(new java.awt.Color(204, 204, 255));
        minute.setText("00 :");

        second.setFont(new java.awt.Font("Dialog", 1, 36)); // NOI18N
        second.setForeground(new java.awt.Color(204, 204, 255));
        second.setText("00 :");

        millisecond.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        millisecond.setForeground(new java.awt.Color(204, 204, 255));
        millisecond.setText("00 ");

        breakBtn.setBackground(new java.awt.Color(206, 28, 28));
        breakBtn.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        breakBtn.setForeground(new java.awt.Color(0, 0, 0));
        breakBtn.setText("break");
        breakBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                breakBtnActionPerformed(evt);
            }
        });

        breakOffBtn.setBackground(new java.awt.Color(74, 204, 237));
        breakOffBtn.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        breakOffBtn.setForeground(new java.awt.Color(0, 0, 0));
        breakOffBtn.setText("break off");
        breakOffBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                breakOffBtnActionPerformed(evt);
            }
        });

        totalTime.setForeground(new java.awt.Color(0, 0, 0));

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(97, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(breakBtn, javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel2Layout.createSequentialGroup()
                            .addComponent(hour, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(37, 37, 37)
                            .addComponent(minute, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(totalTime)
                        .addGap(122, 122, 122)))
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(46, 46, 46)
                        .addComponent(second, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(26, 26, 26)
                        .addComponent(millisecond, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(breakOffBtn)
                        .addGap(256, 256, 256))))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(hour, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(minute, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(second, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(7, 7, 7)
                        .addComponent(millisecond, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(19, 19, 19)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(breakBtn)
                    .addComponent(breakOffBtn))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 151, Short.MAX_VALUE)
                .addComponent(totalTime)
                .addGap(37, 37, 37))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, 689, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 340, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jLabel1registerminimizeMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel1registerminimizeMouseClicked

        this.setState(JFrame.ICONIFIED);
    }//GEN-LAST:event_jLabel1registerminimizeMouseClicked

    private void jLabel3registercloseMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel3registercloseMouseClicked

        System.exit(0);
    }//GEN-LAST:event_jLabel3registercloseMouseClicked

    private void breakBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_breakBtnActionPerformed

        lock.lock();

        try{

            state = true;
            flag = false;

            Thread timerThread = new Thread(){

                public void run(){

                    for(;;){

                        if(state == true){

                            try{
                                sleep(1);

                                if(milliseconds > 1000){

                                    milliseconds = 0;
                                    seconds++;
                                }

                                if(seconds > 60){

                                    milliseconds = 0;
                                    seconds = 0;
                                    minutes++;
                                }

                                if(minutes > 60){

                                    milliseconds = 0;
                                    seconds = 0;
                                    minutes = 0;
                                    hours++;
                                }

                                millisecond.setText(" : " + milliseconds);

                                milliseconds++;
                                second.setText(" : " + seconds);
                                minute.setText(" : " + minutes);
                                hour.setText("" + hours);

                            }catch(Exception e){

                            }

                        }else{
                            break;
                        }
                    }

                }
            };
            timerThread.start();

        }finally{
            lock.unlock();
        }

    }//GEN-LAST:event_breakBtnActionPerformed

    private void breakOffBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_breakOffBtnActionPerformed

        state = false;
        flag = true;
        // stopRunning();

    }//GEN-LAST:event_breakOffBtnActionPerformed

    public void retype(){
        //jTextArea1.setText("");
    }
    
    private void logOutLblMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_logOutLblMouseClicked

        flag = false;

        try {
            LocalTime time1 = LocalTime.now();
            logoutTime = time1.toString();

            SimpleDateFormat format = new SimpleDateFormat("HH:mm:ss");

            Date date2 = format.parse(logoutTime);

            t2 = date2.getTime();

            long workedTime = t2 -t1;

            //break time
            breakTime = (hours *60*60 + minutes * 60 + seconds);
            
            double finalWorkTime = (int) ((workedTime/1000)-breakTime);

            //jTextArea1.setText(""+((workedTime/1000)- breakTime));
            totalTime.setText(""+finalWorkTime);
            
            
            // to add working time details to the database
            
            Employee e = new Employee();
            
            
                //String fwt =Double.toString(finalWorkTime);
                
                String[] monthName = {"January","February","March","April","May",
                                       "June","July","August","September","October",
                                       "November","December"};

                String month = monthName[(Calendar.getInstance().get(Calendar.MONTH))];


                int yr = Year.now().getValue();

                String year =Integer.toString(yr);
            
            
                //e.setFull_name(username);
                e.setMonth(month);
                e.setYear(year);
                e.setFullyWorkedTime(finalWorkTime);
                e.setFull_name(uname);

                EmployeeController ec = new EmployeeController();
                
                ec.insertWorkedTime(e);

                new loginForm().setVisible(true);
                this.dispose();
                    

        } catch (Exception ex) {
            //Logger.getLogger(EmployeeView.class.getName()).log(Level.SEVERE, null, ex);
        }

        
    }//GEN-LAST:event_logOutLblMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(employeeView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(employeeView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(employeeView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(employeeView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new employeeView().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton breakBtn;
    private javax.swing.JButton breakOffBtn;
    private javax.swing.JLabel hour;
    private javax.swing.JLabel jLabel1registerminimize;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3registerclose;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JLabel logOutLbl;
    private javax.swing.JLabel millisecond;
    private javax.swing.JLabel minute;
    private javax.swing.JLabel second;
    private javax.swing.JLabel totalTime;
    // End of variables declaration//GEN-END:variables
}
